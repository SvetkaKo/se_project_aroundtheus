!function(){"use strict";class e{constructor(e,t,s,r,n){this._id=e._id,this._name=e.name,this._link=e.link,this._isLiked=e.isLiked,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteButton=r,this._handleLikeButton=n}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._cardImgElement.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)})),this._btnLike.addEventListener("click",(e=>{this._handleLikeButton(this._id,this._isLiked,this._btnLike)})),this._btnDelete.addEventListener("click",(e=>{this._handleDeleteButton(this._id,this._element)}))}getCardElement(){return this._element=this._getTemplate(),this._cardTitleElement=this._element.querySelector(".card__title"),this._cardImgElement=this._element.querySelector(".card__img"),this._btnLike=this._element.querySelector(".card__btn-like"),this._btnDelete=this._element.querySelector(".card__btn-delete"),this._isLiked&&this._btnLike.classList.add("card__btn-like_active"),this._cardTitleElement.textContent=this._name,this._cardImgElement.src=this._link,this._cardImgElement.alt=this._name,this._setEventListeners(),this._element}}class t{constructor(e,t){this._options=e,this._form=t}_hasInvalidInput(e){return e.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput(this._inputList)?this.disableSubmitButton():(this._buttonElement.classList.remove(this._options.inactiveButtonClass),this._buttonElement.disabled=!1)}_showInputError(e){const t=this._form.querySelector(`.${e.id}-error`);e.classList.add(this._options.inputErrorClass),t.classList.add(this._options.errorClass),t.textContent=e.validationMessage}_hideInputError(e){const t=this._form.querySelector(`.${e.id}-error`);e.classList.remove(this._options.inputErrorClass),t.classList.remove(this._options.errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e,this._options):this._showInputError(e,this._options)}_setEventListeners(){this._inputList=Array.from(this._form.querySelectorAll(this._options.inputSelector)),this._buttonElement=this._form.querySelector(this._options.submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}disableSubmitButton(){this._buttonElement.classList.add(this._options.inactiveButtonClass),this._buttonElement.disabled=!0}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners(this._form,this._options)}}class s{constructor(e){this._popup=e,this._closeButton=this._popup.querySelector(".popup__btn-close")}open(){this._popup.classList.add("popup_opened"),this.setEventListeners()}close=()=>{this._popup.classList.remove("popup_opened"),this.removeEventListeners()};setEventListeners(){this._closeButton.addEventListener("click",this.close),document.addEventListener("mousedown",this._handleOverlayClick),document.addEventListener("keydown",this._handleEscKeydown)}removeEventListeners(){this._closeButton.removeEventListener("click",this.close),document.removeEventListener("mousedown",this._handleOverlayClick),document.removeEventListener("keydown",this._handleEscKeydown)}_handleOverlayClick=e=>{e.target.classList.contains("popup_opened")&&this.close()};_handleEscKeydown=e=>{"Escape"===e.key&&this.close()}}class r{constructor(e,t){let{data:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=t}addItem(e){this._container.prepend(e)}renderItems(){this._items.forEach(this._renderer)}}class n extends s{constructor(e,t){super(e),this._callback=t,this._popupForm=this._popup.querySelector(".popup__form"),this._popupInputs=this._popupForm.querySelectorAll(".popup__form-input"),this._submitBtn=this._popup.querySelector(".popup__btn-submit")}_getInputValues(){const e={};return this._popupInputs.forEach((t=>{e[t.name]=t.value})),console.log(e),e}setInputValues(e){this._popupInputs.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){this._popupForm.addEventListener("submit",this._handleSubmitForm),super.setEventListeners()}removeEventListeners(){this._popupForm.removeEventListener("submit",this._handleSubmitForm),super.removeEventListeners()}_handleSubmitForm=e=>{this._submitBtn.textContent="Saving...",this._callback(this._getInputValues()),e.preventDefault()};reset(){this.close(),this._popupForm.reset(),this._submitBtn.textContent="Save"}}const i=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then(this._checkResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then(this._checkResponse)}getData(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}updateUserInfo(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._checkResponse)}updateProfileImage(e){return console.log(e),fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then(this._checkResponse)}addCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}dislikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"d80b0a8b-56e7-45c3-8099-725247c052b9","Content-Type":"application/json"}}),o={formSelector:".popup__form",inputSelector:".popup__form-input",submitButtonSelector:".popup__btn-submit",inactiveButtonClass:"popup__btn-submit_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active"},a=document.querySelector(".popup_edit-profile"),c=document.querySelector(".popup_new-card"),h=document.forms.newCardForm,l=document.querySelector(".profile__btn_type_edit"),_=document.querySelector(".profile__btn_type_add"),u=document.querySelector(".profile-photo-edit__edit-btn"),d=document.querySelector(".cards"),p=document.forms.profileForm,m=document.querySelector(".popup_picture"),v=document.querySelector(".popup_confirm-delete"),E=document.querySelector(".popup_edit-profile-image");let b;document.forms.profileEditImageForm,new t(o,p).enableValidation();const f=new t(o,h);function L(t){const s=new e(t,".template-card",k,g,I).getCardElement();b.addItem(s)}f.enableValidation();const S=new class extends s{constructor(e){super(e),this._popupPictureImg=e.querySelector(".popup__picture-img"),this._popupPictureTitle=e.querySelector(".popup__picture-title")}open(e,t){this._popupPictureImg.src=t,this._popupPictureImg.alt=e,this._popupPictureTitle.textContent=e,super.open()}}(m);function k(e,t){S.open(e,t)}const y=new class extends s{constructor(e,t){super(e),this._handleDeletePicture=t,this._popupForm=this._popup.querySelector(".popup__form")}open(e,t){this._cardId=e,this._element=t,super.open()}setEventListeners(){this._popupForm.addEventListener("submit",this._handleSubmitForm),super.setEventListeners()}removeEventListeners(){this._popupForm.removeEventListener("submit",this._handleSubmitForm),super.removeEventListeners()}_handleSubmitForm=e=>{this._handleDeletePicture(this._cardId,this._element),this.close(),e.preventDefault()};reset(){this._popupForm.reset()}}(v,(function(e,t){i.deleteCard(e).then((()=>{t.remove()})).catch((e=>{console.error("Error deleting card:",e)}))}));function g(e,t){y.open(e,t)}function I(e,t,s){t?i.dislikeCard(e).then((()=>{s.classList.remove("card__btn-like_active"),this._isLiked=!1})).catch((e=>{console.error(e)})):i.likeCard(e).then((()=>{s.classList.add("card__btn-like_active"),this._isLiked=!0})).catch((e=>{console.error(e)}))}const C=new n(c,(function(e){i.addCard(e).then((()=>{L(e)})).then((()=>{C.reset(),f.disableSubmitButton()})).catch((e=>{console.error("Error adding a new card:",e)}))}));_.addEventListener("click",(()=>{C.open()}));const q=new class{constructor(e){let{nameSelector:t,aboutSelector:s,avatarSelector:r}=e;this._nameElement=document.querySelector(t),this._aboutElement=document.querySelector(s),this._avatarElement=document.querySelector(r)}getUserInfo(){return{name:this._nameElement.textContent,about:this._aboutElement.textContent,avatar:this._avatarElement.src}}setUserInfo(e){this._nameElement.textContent=e.name,this._aboutElement.textContent=e.about,this._avatarElement.src=e.avatar}setUserAvatar(e){this._avatarElement.src=e.avatar}}({nameSelector:".profile__name",aboutSelector:".profile__title",avatarSelector:".profile-photo-edit__image"});i.getData().then((e=>{let[t,s]=e;console.log(t,s),q.setUserInfo(t),b=new r({data:s,renderer:L},d),b.renderItems()}));const w=new n(E,(function(e){i.updateProfileImage(e).then((()=>{q.setUserAvatar(e)})).then((()=>{w.reset()})).catch((e=>{console.error("Error updating a new image:",e)}))}));u.addEventListener("click",(()=>{w.open()}));const U=new n(a,(function(e){console.log(e),i.updateUserInfo(e).then((()=>{q.setUserInfo(e)})).then((()=>{U.reset()})).catch((e=>{console.error("Error adding a new card:",e)}))}));l.addEventListener("click",(()=>{const e=q.getUserInfo();U.setInputValues(e),U.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,